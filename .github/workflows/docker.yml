name: "docker"

on:
  workflow_dispatch:
  push:
    branches:
      - 'main'
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: setup node 14
        uses: actions/setup-node@v2
        with:
          node-version: '14'
      - name: NPM Cache
        uses: actions/cache@v2
        id: npm-cache
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-
      - name: Install packages
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: npm ci --registry https://registry.npmjs.org/
      - name: Cache Next
        uses: actions/cache@v2
        with:
          path: './.next/cache'
          key: ${{ runner.os }}-next-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-next-
      - name: Build
        run: npm run build && node script/docker.mjs && echo "/.next/cache" > .dockerignore
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile.github
          push: true
          tags: houzhenhong/next-ntf:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
